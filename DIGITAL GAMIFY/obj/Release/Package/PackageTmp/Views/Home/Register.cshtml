@using DIGITAL_GAMIFY.Entities;
@using DIGITAL_GAMIFY.Code;
@model DIGITAL_GAMIFY.Entities.BusinessEntity
@{
    Layout = null;
}

<!DOCTYPE html>
   <html>
<head>
    <title>Digital Gamify</title>
    <link rel="stylesheet" href="~/wheel_of_fortune/main.css" type="text/css" />
    <script type="text/javascript" src="~/wheel_of_fortune/Winwheel.js"></script>
    <script type="text/javascript" src="@Url.Content(Globalsettings.adminjspath("jquery.min.js"))"></script>
    <script type="text/javascript" src="@Url.Content(Globalsettings.adminjspath("bootstrap.min.js"))"></script>
    <script type="text/javascript" src="@Url.Content(Globalsettings.adminjspath("global.js"))"></script>
    <script>
        //global javascript variable to get websiteurl,websiteurlapi .
        var websiteurlapi = '@Globalsettings.GetWebSiteUrlApi()';
    </script>

    <script src="http://cdnjs.cloudflare.com/ajax/libs/gsap/latest/TweenMax.min.js"></script>
</head>
   <body>
       <div align="center">
 
           <p>Choose a power setting then press the Spin button. You will be alerted to the prize won when the spinning stops.</p>
           <br />
           <table cellpadding="0" cellspacing="0" border="0">
               <tr>
                   <td>
                       <div class="power_controls">
                           <br />
                           <br />
                           <table class="power" cellpadding="10" cellspacing="0">
                               <tr>
                                   <th align="center">Power</th>
                               </tr>
                               <tr>
                                   <td width="78" align="center" id="pw3" onclick="powerSelected(3);">High</td>
                               </tr>
                               <tr>
                                   <td align="center" id="pw2" onclick="powerSelected(2);">Med</td>
                               </tr>
                               <tr>
                                   <td align="center" id="pw1" onclick="powerSelected(1);">Low</td>
                               </tr>
                           </table>
                           <br />
                           <img id="spin_button" src="~/wheel_of_fortune/spin_on.png" alt="Spin" onclick="startSpin();" />
                           <br /><br />
                           @*&nbsp;&nbsp;<a href="#" onclick="resetWheel(); return false;">Play Again</a><br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(reset)*@
                       </div>
                   </td>
                   <td width="438" height="582" class="the_wheel wheel" align="center">
                       <canvas id="canvas" width="434" height="434">
                           <p style="{color: white}" align="center">Sorry, your browser doesn't support canvas. Please try another.</p>
                       </canvas>
                   </td>
               </tr>
           </table>
           </div>
       @*<style>
           canvas#canvas {
               width: 434px;
               height: 434px;
               position: relative; 
               left: 0;
               top: 0;
               z-index: -1;
           }
       </style>*@
           <script>

               $(document).ready(function () {
                   GetSpinPrizes();
                   //func1();

               });
               //function func1() {
               //    window.myvar = "something";
               //}
               //function func2() {
               //    var newvar = window.myvar + "append something";
               //    alert(newvar);
               //}
               var prize = [];
               function GetSpinPrizes() {
                   //var nietos = [];
                   gl.ajaxreq(websiteurlapi + "getSpinById", "get", { spid: 1, cid: 0 }, function (response) {
                       $.each(response.Prizes, function (j, item) {
                           var obj = {};
                           obj["fillStyle"] = item.Colour;
                           obj["text"] = item.Prize;
                           prize.push(obj);
                           var w = {};
                           w["fillStyle"] = "#ffffff";
                           w["text"] = "LOOSE TURN";
                           w["textFontSize"] = "13";
                           prize.push(w);
                       });
                       GetSpinner();
                   }, '', 'Loading Questions...', '', 'getting prizes.');
                   //console.log(nietos);
               }
                   
               function GetSpinner() {
                   // Create new wheel object specifying the parameters at creation time.
                    theWheel = new Winwheel({
                       'outerRadius': 212,        // Set outer radius so wheel fits inside the background.
                       'innerRadius': 75,         // Make wheel hollow so segments don't go all way to center.
                       'textFontSize': 24,         // Set default font size for the segments.
                       'textOrientation': 'vertical', // Make text vertial so goes down from the outside of wheel.
                       'textAlignment': 'outer',    // Align text to outside of wheel.
                       'numSegments': 6,         // Specify number of segments.
                       'segments':prize,
                        //[                               // font size and test colour overridden on backrupt segments.
                        //  { fillStyle: "#ee1c24", text: "300" },
                        //  { fillStyle: "#ffffff", text: "LOOSE TURN", textFontSize: "13" },
                        //  { fillStyle: "#f26522", text: "500" },
                        //  { fillStyle: "#ffffff", text: "LOOSE TURN", textFontSize: "13" },
                        //  { fillStyle: "#e70697", text: "350" },
                        //  { fillStyle: "#ffffff", text: "LOOSE TURN", textFontSize: "13" },
                        //  { fillStyle: "#3cb878", text: "1000" },
                        //  { fillStyle: "#ffffff", text: "LOOSE TURN", textFontSize: "13" },
                        //  { fillStyle: "#00aef0", text: "800" },
                        //  { fillStyle: "#ffffff", text: "LOOSE TURN", textFontSize: "13" },
                        //  { fillStyle: "#fff200", text: "650" },
                        //  { fillStyle: "#ffffff", text: "LOOSE TURN", textFontSize: "13" }

                        //],      // Define segments including colour and text.

                       'animation':           // Specify the animation to use.
                       {
                           'type': 'spinToStop',
                           'duration': 16,     // Duration in seconds.
                           'spins': 6,     // Default number of complete spins.
                           'callbackFinished': alertPrize
                       }
                    });
                   //console.log(prize);

               }
               

               // Vars used by the code in this page to do power controls.
               var wheelPower = 0;
               var wheelSpinning = false;

               // -------------------------------------------------------
               // Function to handle the onClick on the power buttons.
               // -------------------------------------------------------
               function powerSelected(powerLevel) {
                   // Ensure that power can't be changed while wheel is spinning.
                   if (wheelSpinning == false) {
                       // Reset all to grey incase this is not the first time the user has selected the power.
                       document.getElementById('pw1').className = "";
                       document.getElementById('pw2').className = "";
                       document.getElementById('pw3').className = "";

                       // Now light up all cells below-and-including the one selected by changing the class.
                       if (powerLevel >= 1) {
                           document.getElementById('pw1').className = "pw1";
                       }

                       if (powerLevel >= 2) {
                           document.getElementById('pw2').className = "pw2";
                       }

                       if (powerLevel >= 3) {
                           document.getElementById('pw3').className = "pw3";
                       }

                       // Set wheelPower var used when spin button is clicked.
                       wheelPower = powerLevel;

                       // Light up the spin button by changing it's source image and adding a clickable class to it.
                       document.getElementById('spin_button').src = "http://localhost:31291/wheel_of_fortune/spin_on.png";
                       document.getElementById('spin_button').className = "clickable";
                   }
               }

               // -------------------------------------------------------
               // Click handler for spin button.
               // -------------------------------------------------------
               function startSpin() {
                   // Ensure that spinning can't be clicked again while already running.
                   if (wheelSpinning == false) {
                       // Based on the power level selected adjust the number of spins for the wheel, the more times is has
                       // to rotate with the duration of the animation the quicker the wheel spins.
                       if (wheelPower == 1) {
                           theWheel.animation.spins = 3;
                       }
                       else if (wheelPower == 2) {
                           theWheel.animation.spins = 6;
                       }
                       else if (wheelPower == 3) {
                           theWheel.animation.spins = 9;
                       }

                       // Disable the spin button so can't click again while wheel is spinning.
                       document.getElementById('spin_button').src = "http://localhost:31291/wheel_of_fortune/spin_off.png";
                       document.getElementById('spin_button').className = "";

                       let stopAt = (91 + Math.floor((Math.random() * 43)))

                       //alert(stopAt);

                       // Important thing is to set the stopAngle of the animation before stating the spin.
                       theWheel.animation.stopAngle = stopAt;

                       // Begin the spin animation by calling startAnimation on the wheel object.
                       var newvar = theWheel.startAnimation();

                       // Set to true so that power can't be changed and spin button re-enabled during
                       // the current animation. The user will have to reset before spinning again.
                       wheelSpinning = true;
                   }
               }

               // -------------------------------------------------------
               // Function for reset button.
               // -------------------------------------------------------
               function resetWheel() {
                   theWheel.stopAnimation(false);  // Stop the animation, false as param so does not call callback function.
                   theWheel.rotationAngle = 0;     // Re-set the wheel angle to 0 degrees.
                   theWheel.draw();                // Call draw to render changes to the wheel.

                   document.getElementById('pw1').className = "";  // Remove all colours from the power level indicators.
                   document.getElementById('pw2').className = "";
                   document.getElementById('pw3').className = "";

                   wheelSpinning = false;          // Reset to false to power buttons and spin can be clicked again.
               }

               // -------------------------------------------------------
               // Called when the spin animation has finished by the callback feature of the wheel because I specified callback in the parameters.
               // -------------------------------------------------------
               function alertPrize(indicatedSegment) {
                   // Just alert to the user what happened.
                   // In a real project probably want to do something more interesting than this with the result.
                   if (indicatedSegment.text == 'LOOSE TURN') {
                       alert('Sorry but you loose a turn.');
                   }
                   else if (indicatedSegment.text == 'BANKRUPT') {
                       alert('Oh no, you have gone BANKRUPT!');
                   }
                   else {
                       alert("You have won " + indicatedSegment.text);
                   }
               }
           </script>
       <script>
    
       </script>

   </body>
</html>



















































